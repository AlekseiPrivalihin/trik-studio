@@Property@@
    internal @@Type@@ @@Name@@ {get; set;}
==========    
@@Constructor@@
    internal @@CustomClassName@@(@@ConstructorParameters@@)
    {
@@Fields@@    
    }
==========
@@FieldInit@@
        this.@@Name@@ = @@Value@@;
==========
@@Argument@@
@@ArgType@@ @@ArgName@@
==========
@@EnumElement@@
        public const int @@Name@@ = @@Value@@;
==========
@@SerializationIntAsShort@@
            short @@Name@@_temp = (short)@@Name@@;
            if (iBigEndianFlag) @@Name@@_temp = Convert16(@@Name@@_temp);
            iPackWriter.Write(@@Name@@_temp);
==========
@@DeserializationIntAsShort@@
            short @@Name@@_temp = iRdr.ReadInt16();
            if (iBigEndianFlag) @@Name@@_temp = Convert16(@@Name@@_temp);
            @@Name@@ = (int)@@Name@@_temp;
==========
@@Serialization_int@@
            int @@Name@@_temp = @@Name@@;
            if (iBigEndianFlag) @@Name@@_temp = Convert32(@@Name@@_temp);
            iPackWriter.Write(@@Name@@_temp);
==========
@@Deserialization_int@@
            int @@Name@@_temp = iRdr.ReadInt16();
            if (iBigEndianFlag) @@Name@@_temp = Convert32(@@Name@@_temp);
            @@Name@@ = @@Name@@_temp;
==========
@@MasterDiagramConstant@@
        const @@Type@@ @@Name@@ = @@Value@@;
==========
@@MasterDiagramFieldWithoutInit@@
        private @@OptionalStatic@@@@Type@@ @@Name@@;
==========
@@MasterDiagramField@@
        private @@OptionalStatic@@@@Type@@ @@Name@@ = @@Value@@;
==========
@@EventHandler@@
        public override void @@HandlerName@@(Message msg)
        {
            switch (msg.Command)
            {
@@SwitchCases@@
            }
        }
==========
@@SwitchCase@@
@@Cases@@
                {
@@CaseCode@@
                }
                break;
==========
@@Case@@
                case Message.@@CaseValue@@:
==========
@@CaseCode@@
                    @@Command@@;
==========
@@UseMessageInput@@
            UseMessageInput(new @@MessageInputClass@@(@@MessageInputParameter@@));
==========
@@OnTcpMessageClass@@
TcpIPMessageInput
==========
@@OnMailboxMessageClass@@
AsyncMailBox
==========
@@HelperFunction@@
        internal @@Type@@ @@Name@@(@@Params@@)
        {
@@Body@@
        }

==========
@@Return@@
            return@@OptionalReturnValue@@;
==========
@@If@@
                if (@@Condition@@)
                {
@@Then@@
                }
                else
                {
@@Else@@
                }
